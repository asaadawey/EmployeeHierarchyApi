// <auto-generated />
using System;
using EmployeeHierarchyApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeHierarchyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeHierarchyApi.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9771),
                            Name = "John Smith",
                            Title = "CEO",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9772)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9775),
                            ManagerId = 1,
                            Name = "Sarah Johnson",
                            Title = "CTO",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9775)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9776),
                            ManagerId = 1,
                            Name = "Mike Wilson",
                            Title = "VP Sales",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9776)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9777),
                            ManagerId = 2,
                            Name = "Lisa Brown",
                            Title = "Engineering Manager",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9778)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9779),
                            ManagerId = 4,
                            Name = "Tom Davis",
                            Title = "Senior Developer",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9779)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9780),
                            ManagerId = 4,
                            Name = "Anna Garcia",
                            Title = "Developer",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9780)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9782),
                            ManagerId = 3,
                            Name = "David Miller",
                            Title = "Sales Manager",
                            UpdatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9782)
                        });
                });

            modelBuilder.Entity("EmployeeHierarchyApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 26, 14, 3, 6, 139, DateTimeKind.Utc).AddTicks(9854),
                            Email = "test@example.com",
                            FirstName = "Test",
                            IsActive = true,
                            LastName = "Test",
                            PasswordHash = "1234",
                            Role = "Admin",
                            Username = "testuser"
                        });
                });

            modelBuilder.Entity("EmployeeHierarchyApi.Data.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeHierarchyApi.Data.Entities.Employee", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EmployeeHierarchyApi.Data.Entities.Employee", b =>
                {
                    b.Navigation("Subordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
